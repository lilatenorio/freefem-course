// 1. Pre-proceso

// 1.1. Mesh
mesh Th = square(4, 4);
plot(Th, wait=1);
int[int] dirichletBoundary = [1,2,3,4];

// 1.2. FE space and functions
fespace Vh(Th,P1);
Vh u,v;

// 1.3. Definition of data
real nu=1;
func f=4;
func g=0;

// 2.- Defining the problem

varf PoissonDirichletVarf(u,v) =
  // Bilinear form:
  int2d(Th)( nu*( dx(u)*dx(v) + dy(u)*dy(v) ))
  // Linear form:
  - int2d(Th)( f*v )
  // Dirichlet boundary condition
  + on(dirichletBoundary, u=g);

matrix A = PoissonDirichletVarf (Vh, Vh); // Mount sparse matrix
real[int] b = PoissonDirichletVarf(0, Vh); // Mount RHS

u[] = A^-1 * b; // Solve the linear system and store vector into u

// 3. Post-processing
plot(u, value=1, fill=1, wait=1);

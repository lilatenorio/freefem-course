// 1. Pre-proceso

// 1.1. Mesh
border gamma0(t=2*pi, 0) { x=1.5*cos(t); y=sin(t); }
border gamma1(t=0, 2*pi) { x=4*cos(t); y=4*sin(t); }
mesh Th = buildmesh(gamma1(40)+gamma0(30));
plot(Th, wait=1);

// 1.2. FE space and functions
fespace Vh(Th,P1);
Vh u,v;

// 1.3. Definition of data
real nu=0.3;
func f=8*(x^2+y^2);
func g0=400;
func g1=100;

// 2.- Defining the problem and solving it

problem PoissonDirNeu(u,v) =
  // Bilinear form:
  int2d(Th)( nu*( dx(u)*dx(v) + dy(u)*dy(v) ))
  // Linear form:
  - int2d(Th)( f*v )
  - int1d(Th, gamma1)( nu*g1*v )
  // Dirichlet boundary condition
  + on(gamma0, u=g0);

PoissonDirNeu; // Mount linear system and solve the problem

// 3. Post-processing
plot(u, value=1, fill=1, wait=1);
